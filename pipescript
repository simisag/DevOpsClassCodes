pipeline
{
agent any
tools {
  git 'Default'
  jdk 'java'
  maven 'mvn'
}


stages {
  stage('compile') {
    steps {
		echo "COMPLIE STAGE"
		git 'https://github.com/lerndevops/DevOpsClassCodes'
		sh 'mvn compile'
	  
    }
  }

  stage('codeReview') {
    steps {
		echo "Code review"
	
		sh 'mvn -P metrics pmd:pmd'
    }

    post {
      success {
        pmd canComputeNew: false, defaultEncoding: '', healthy: '', pattern: '**/pmd.xml', unHealthy: ''
      }
    }
  }

  stage('UnitTest') {
    steps {
      echo "Unit Test"	
      sh 'mvn test'
	  }

    post {
      success {
        junit 'target/surefire-reports/*.xml'
      }
    }
  }

  stage('CodeCoverage') {
    steps {
      sh 'mvn cobertura:cobertura -Dcobertura.report.format=xml'
    }

    post {
      success {
        cobertura autoUpdateHealth: false, autoUpdateStability: false, coberturaReportFile: 'target/site/cobertura/coverage.xml', conditionalCoverageTargets: '70, 0, 0', failUnhealthy: false, failUnstable: false, lineCoverageTargets: '80, 0, 0', maxNumberOfBuilds: 0, methodCoverageTargets: '80, 0, 0', onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false
      }
    }
  }

  stage('package') {
    steps {
      echo "Package"
      sh 'mvn package'
    }
  }


}
}
